#! /bin/sh /usr/share/dpatch/dpatch-run
## typo_fixes.dpatch by Sebastian Harl <sh@tokkee.org>
##
## DP: collectd{-perl,.conf}(5), {my,postgre}sql plugins: Fixed some typos.
## DP:
## DP: Thanks to lintian(1) for catching (some of) those! :-)

@DPATCH@

diff a/src/collectd-perl.pod b/src/collectd-perl.pod
--- a/src/collectd-perl.pod
+++ b/src/collectd-perl.pod
@@ -163,7 +163,7 @@ and collectd:
 
 =item Config-Item
 
-A config-item is one structure which keeps the informations provided in the
+A config-item is one structure which keeps the information provided in the
 configuration file. The array of children keeps one entry for each
 configuration option. Each such entry is another config-item structure, which
 may nest further if nested blocks are used.
diff a/src/collectd-python.pod b/src/collectd-python.pod
--- a/src/collectd-python.pod
+++ b/src/collectd-python.pod
@@ -39,8 +39,8 @@ required.
 Loads the Python plugin I<Plugin>. Unlike most other LoadPlugin lines, this one
 should be a block containing the line "Globals true". This will cause collectd
 to export the name of all objects in the python interpreter for all plugins to
-see. If you don't do this or your platform does not support it, the embeded
-interpreter will start anywa but you won't be able to load certain python
+see. If you don't do this or your platform does not support it, the embedded
+interpreter will start anyway but you won't be able to load certain python
 modules, e.g. "time".
 
 =item B<Encoding> I<Name>
@@ -211,7 +211,7 @@ and collectd:
 
 =head2 Config
 
-The Config class is an object which keeps the informations provided in the
+The Config class is an object which keeps the information provided in the
 configuration file. The sequence of children keeps one entry for each
 configuration option. Each such entry is another Config instance, which
 may nest further if nested blocks are used.
@@ -631,7 +631,7 @@ dispatched by the python plugin after upgrades.
 =item
 
 This plugin is not compatible with python3. Trying to compile it with python3
-will fail because of the ways string, unicode and bytearray bahavior was
+will fail because of the ways string, unicode and bytearray behavior was
 changed.
 
 =item
diff a/src/collectd.conf.pod b/src/collectd.conf.pod
--- a/src/collectd.conf.pod
+++ b/src/collectd.conf.pod
@@ -112,7 +112,7 @@ a value higher than the number of plugins you've loaded is totally useless.
 =item B<Hostname> I<Name>
 
 Sets the hostname that identifies a host. If you omit this setting, the
-hostname will be determinded using the L<gethostname(2)> system call.
+hostname will be determined using the L<gethostname(2)> system call.
 
 =item B<FQDNLookup> B<true|false>
 
@@ -443,7 +443,7 @@ The curl plugin uses the B<libcurl> (L<http://curl.haxx.se/>) to read web pages
 and the match infrastructure (the same code used by the tail plugin) to use
 regular expressions with the received data.
 
-The following example will read the current value of AMD stock from google's
+The following example will read the current value of AMD stock from Google's
 finance page and dispatch the value to collectd.
 
   <Plugin curl>
@@ -921,7 +921,7 @@ is set to B<true>, all disks are collected B<except> the ones matched.
 
 =item B<Interface> I<Interface>
 
-The dns plugin uses B<libpcap> to capture dns traffic and analyses it. This
+The dns plugin uses B<libpcap> to capture dns traffic and analyzes it. This
 option sets the interface that should be used. If this option is not set, or
 set to "any", the plugin will try to get packets from B<all> interfaces. This
 may not work on certain platforms, such as MacE<nbsp>OSE<nbsp>X.
@@ -1673,7 +1673,7 @@ or SQL threads are not running.
 
 =head2 Plugin C<netapp>
 
-The netapp plugin can collect various performance and capacity informations
+The netapp plugin can collect various performance and capacity information
 from a NetApp filer using the NetApp API.
 
 Please note that NetApp has a wide line of products and a lot of different
@@ -1709,7 +1709,7 @@ Here are some examples to help you understand the above text more easily:
 
 =item B<IgnoreSelected>
 
-The behaviour is the same as with all other similar plugins: If nothing is
+The behavior is the same as with all other similar plugins: If nothing is
 selected at all, everything is collected. If some things are selected using the
 options described above, only these statistics are collected. If you set
 B<IgnoreSelected> to B<true>, this behavior is inverted, i.E<nbsp>e. the
@@ -1721,7 +1721,7 @@ specified statistics will not be collected.
 
 The Network plugin sends data to a remote instance of collectd, receives data
 from a remote instance, or both at the same time. Data which has been received
-from the network is usually not transmitted again, but this can be actived, see
+from the network is usually not transmitted again, but this can be activated, see
 the B<Forward> option below.
 
 The default IPv6 multicast group is C<ff18::efc0:4a42>. The default IPv4
@@ -2007,7 +2007,7 @@ UDP-Port to connect to. Defaults to B<123>.
 
 =item B<ReverseLookups> B<true>|B<false>
 
-Sets wether or not to perform reverse lookups on peers. Since the name or
+Sets whether or not to perform reverse lookups on peers. Since the name or
 IP-address may be used in a filename it is recommended to disable reverse
 lookups. The default is to do reverse lookups to preserve backwards
 compatibility, though.
diff a/src/mysql.c b/src/mysql.c
--- a/src/mysql.c
+++ b/src/mysql.c
@@ -397,7 +397,7 @@ static MYSQL *getconnection (mysql_database_t *db)
 	}
 	else
 	{
-		INFO ("mysql plugin: Sucessfully connected to database %s "
+		INFO ("mysql plugin: Successfully connected to database %s "
 				"at server %s (server version: %s, protocol version: %d)",
 				(db->database != NULL) ? db->database : "<none>",
 				mysql_get_host_info (db->con),
diff a/src/postgresql.c b/src/postgresql.c
--- a/src/postgresql.c
+++ b/src/postgresql.c
@@ -345,7 +345,7 @@ static int c_psql_exec_query (c_psql_database_t *db, udb_query_t *q)
 		 * `BAIL_OUT'. */
 		column_names[col] = PQfname (res, col);
 		if (NULL == column_names[col]) {
-			log_err ("Failed to resolv name of column %i.", col);
+			log_err ("Failed to resolve name of column %i.", col);
 			BAIL_OUT (-1);
 		}
 	}
@@ -496,7 +496,7 @@ static int c_psql_init (void)
 
 		server_host    = PQhost (db->conn);
 		server_version = PQserverVersion (db->conn);
-		log_info ("Sucessfully connected to database %s (user %s) "
+		log_info ("Successfully connected to database %s (user %s) "
 				"at server %s%s%s (server version: %d.%d.%d, "
 				"protocol version: %d, pid: %d)",
 				PQdb (db->conn), PQuser (db->conn),
